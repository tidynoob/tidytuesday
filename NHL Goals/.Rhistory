source('~/R/tidytuesday/NHL Goals/hockey_goals.R', echo=TRUE)
source('~/R/tidytuesday/NHL Goals/hockey_goals.R', echo=TRUE)
# Rank most career goals by player per year
rank_by_year <- career_goals %>%
# rough interpolation to smooth out ranks in first few years
group_by(player) %>%
complete(year = full_seq(year, 1)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
group_by(year) %>%
mutate(rank = min_rank(-career_goals) * 1) %>%
ungroup() %>%
# interpolate through half years to smooth animation transitions
group_by(player) %>%
complete(year = full_seq(year, .5)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
mutate(rank = approx(x = year, y = rank, xout = year)$y) %>%
ungroup() %>%
filter(rank <= 10,
career_goals <= 0) %>%
arrange(player, year)
anim <- ggplot(rank_by_year,
aes(rank,
group = player,
fill = as.factor(player),
color = as.factor(player))) +
geom_tile(aes(y = career_goals / 2,
height = career_goals,
width = 0.9),
alpha = 0.8,
color = "grey50") +
geom_text(aes(y = 0, label = paste(player, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y = career_goals,
label = scales::comma(career_goals)),
hjust = 0,
nudge_y = 50) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title = '{closest_state %>%  as.numeric %>% floor}',
x = "",
y = "Career Goals") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(1, 1, 1, 4, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black")
) +
transition_states(year, transition_length = 1, state_length = 0) +
# enter_grow() +
exit_shrink() +
ease_aes("linear")
animate(
anim,
fps = 25,
nframes = 250,
duration = 33,
width = 600,
height = 400,
end_pause = 20,
)
View(career_goals)
anim <- ggplot(rank_by_year,
aes(rank,
group = player,
fill = as.factor(player),
color = as.factor(player))) +
geom_tile(aes(y = career_goals / 2,
height = career_goals,
width = 0.9),
alpha = 0.8,
color = "grey50") +
geom_text(aes(y = 0, label = paste(player, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y = career_goals,
label = scales::comma(career_goals)),
hjust = 0,
nudge_y = 50) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title = '{closest_state %>%  as.numeric %>% floor}',
x = "",
y = "Career Goals") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(1, 1, 1, 4, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black")
) +
transition_states(year, transition_length = 1, state_length = 0) +
enter_grow() +
exit_shrink() +
ease_aes("linear")
# Rank most career goals by player per year
rank_by_year <- career_goals %>%
# rough interpolation to smooth out ranks in first few years
group_by(player) %>%
complete(year = full_seq(year, 1)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
group_by(year) %>%
mutate(rank = min_rank(-career_goals) * 1) %>%
ungroup() %>%
# interpolate through half years to smooth animation transitions
group_by(player) %>%
complete(year = full_seq(year, .5)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
mutate(rank = approx(x = year, y = rank, xout = year)$y) %>%
ungroup() %>%
filter(rank <= 10,
career_goals <= 0) %>%
arrange(player, year)
View(career_goals)
anim <- ggplot(rank_by_year,
aes(rank,
group = player,
fill = as.factor(player),
color = as.factor(player))) +
geom_tile(aes(y = career_goals / 2,
height = career_goals,
width = 0.9),
alpha = 0.8,
color = "grey50") +
geom_text(aes(y = 0, label = paste(player, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y = career_goals,
label = scales::comma(career_goals)),
hjust = 0,
nudge_y = 50) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title = '{closest_state %>%  as.numeric %>% floor}',
x = "",
y = "Career Goals") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(1, 1, 1, 4, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black")
) +
transition_states(year, transition_length = 1, state_length = 0) +
enter_grow() +
exit_shrink() +
ease_aes("linear")
animate(
anim,
fps = 25,
nframes = 250,
duration = 33,
width = 600,
height = 400,
end_pause = 20,
)
# Rank most career goals by player per year
rank_by_year <- career_goals %>%
# rough interpolation to smooth out ranks in first few years
group_by(player) %>%
complete(year = full_seq(year, 1)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
group_by(year) %>%
mutate(rank = min_rank(-career_goals) * 1) %>%
ungroup() %>%
# interpolate through half years to smooth animation transitions
group_by(player) %>%
complete(year = full_seq(year, .5)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
mutate(rank = approx(x = year, y = rank, xout = year)$y) %>%
ungroup() %>%
filter(rank <= 10) %>%
arrange(player, year)
anim <- ggplot(rank_by_year,
aes(rank,
group = player,
fill = as.factor(player),
color = as.factor(player))) +
geom_tile(aes(y = career_goals / 2,
height = career_goals,
width = 0.9),
alpha = 0.8,
color = "grey50") +
geom_text(aes(y = 0, label = paste(player, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y = career_goals,
label = scales::comma(career_goals)),
hjust = 0,
nudge_y = 50) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title = '{closest_state %>%  as.numeric %>% floor}',
x = "",
y = "Career Goals") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(1, 1, 1, 4, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black")
) +
transition_states(year, transition_length = 1, state_length = 0) +
enter_grow() +
exit_shrink() +
ease_aes("linear")
animate(
anim,
fps = 25,
nframes = 250,
duration = 33,
width = 600,
height = 400,
end_pause = 20,
)
anim_save("hockey_goals.gif")
# Rank most career goals by player per year
rank_by_year <- career_goals %>%
# rough interpolation to smooth out ranks in first few years
group_by(player) %>%
complete(year = full_seq(year, 1)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
group_by(year) %>%
mutate(rank = min_rank(-career_goals) * 1) %>%
ungroup() %>%
# interpolate through half years to smooth animation transitions
group_by(player) %>%
complete(year = full_seq(year, .5)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
mutate(rank = approx(x = year, y = rank, xout = year)$y) %>%
ungroup() %>%
filter(rank <= 10, year >= 1985) %>%
arrange(player, year)
animate(
anim,
fps = 25,
nframes = 250,
duration = 33,
width = 600,
height = 400,
end_pause = 20,
)
anim_save("hockey_goals.gif")
View(rank_by_year)
# Rank most career goals by player per year
rank_by_year <- career_goals %>%
# rough interpolation to smooth out ranks in first few years
group_by(player) %>%
complete(year = full_seq(year, 1)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
group_by(year) %>%
mutate(rank = min_rank(-career_goals) * 1) %>%
ungroup() %>%
# interpolate through half years to smooth animation transitions
group_by(player) %>%
complete(year = full_seq(year, .5)) %>%
mutate(career_goals = spline(x = year, y = career_goals, xout = year)$y) %>%
mutate(rank = approx(x = year, y = rank, xout = year)$y) %>%
ungroup() %>%
filter(rank <= 10, year >= 1985) %>%
arrange(player, year)
anim <- ggplot(rank_by_year,
aes(rank,
group = player,
fill = as.factor(player),
color = as.factor(player))) +
geom_tile(aes(y = career_goals / 2,
height = career_goals,
width = 0.9),
alpha = 0.8,
color = "grey50") +
geom_text(aes(y = 0, label = paste(player, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y = career_goals,
label = scales::comma(career_goals)),
hjust = 0,
nudge_y = 50) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
labs(title = '{closest_state %>%  as.numeric %>% floor}',
x = "",
y = "Career Goals") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(1, 1, 1, 4, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black")
) +
transition_states(year, transition_length = 1, state_length = 0) +
enter_grow() +
exit_shrink() +
ease_aes("linear")
animate(
anim,
fps = 25,
nframes = 250,
duration = 33,
width = 600,
height = 400,
end_pause = 20,
)
anim_save("hockey_goals.gif")
source('~/R/tidytuesday/NHL Goals/hockey_goals.R', echo=TRUE)
